import{_ as o,o as i,a as r,b as n,t as e,F as s,c as a}from"./app.39875f72.js";const l={},c=a('<h1 id="create-historical-data-collections" tabindex="-1"><a class="header-anchor" href="#create-historical-data-collections" aria-hidden="true">#</a> Create historical data collections</h1><div class="custom-container tip"><p class="custom-container-title">TIP</p><p>To ensure that ODP forwards attributes to <strong>Instana</strong> as soon as you start collecting them, update the ODP collection configuration member <code>KAYOPEN</code> <em>before</em> creating the corresponding historical data collections.</p></div><div class="custom-container warning"><p class="custom-container-title">WARNING</p><p>With higher granularity (a smaller interval means more data collected) there are 2 obvious considerations:</p><ol><li>CPU overhead on data collection and retrieval;</li><li>DASD space to hold historical tables.</li></ol><p>Should you grow in CPU usage or Persistent Data Store, consider raising the interval and/or skipping warehousing for certain tables on PDS and just go with open data.</p></div>',3),d=a("<table><thead><tr><th><code>table_name</code> field value</th><th>Attribute group</th><th>Collection interval (minutes)</th></tr></thead><tbody><tr><td>M5STGCDTH</td><td>Common_Storage_Utilization_History</td><td>1</td></tr><tr><td>M5STGFDTH</td><td>Real_Storage_Utilization_History</td><td>1</td></tr><tr><td>syscpuutil</td><td>System CPU Utilization</td><td>1</td></tr></tbody></table>",1);function h(t,u){return i(),r(s,null,[c,n("p",null,"Create the following historical data collections for the "+e(t.$frontmatter.bundle)+" agent. This can be done via the E3270UI or the Tivoli Enterprise Portal within the "+e(t.$frontmatter.bundle)+" workspace.",1),d],64)}var m=o(l,[["render",h]]);export{m as default};
