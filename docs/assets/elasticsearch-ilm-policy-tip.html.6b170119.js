import{_ as n,r as l,o as i,a as c,b as e,d as r,w as d,t as o,e as t}from"./app.5561d6b0.js";const h={},_={class:"custom-container tip"},p=e("p",{class:"custom-container-title"},"Already configured Elastic for ODP?",-1),u=t("If you have already configured Elastic for earlier ODP Elastic samples that use an "),f=t("old index naming pattern"),m=t(":"),y=e("li",null,[e("p",null,"Keep the ILM policy for those old indices, to continue managing them while they still exist. Delete that policy only after all of the indices that refer to it have been deleted.")],-1),g=e("p",null,"For new indices for the current starter dashboards, use a policy with a different name, as shown in the following starter sample.",-1),w=t("The following starter policy is named "),b=t(" (note the "),v=e("code",null,"ds-",-1),x=t("), which is deliberately different from the "),E=t(" name used in earlier samples."),k=e("p",null,"The different policy name reflects the fact that the current starter Elastic configuration uses data streams, and also enables old and new indices to be managed separately.",-1);function D(s,T){const a=l("RouterLink");return i(),c("div",_,[p,e("p",null,[u,r(a,{to:"/odp-elastic-samples/includes/elasticsearch-indices-old.html"},{default:d(()=>[f]),_:1}),m]),e("ul",null,[y,e("li",null,[g,e("p",null,[w,e("code",null,o(s.$frontmatter.namespace)+"-ds-ilm-policy",1),b,v,x,e("code",null,o(s.$frontmatter.namespace)+"-ilm-policy",1),E]),k])])])}var I=n(h,[["render",D]]);export{I as default};
